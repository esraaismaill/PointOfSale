@page "/addcategory"
@attribute [Authorize(Policy = "DbAdministratorOnly")]

@inject NavigationManager NavigationManager
@inject IAddCategoryUseCase AddCategoryUseCase
    <div class="content px-4 hero_detail-box" >
        <h3>Add Category</h3>
        <br />
        @if (category != null)
        {
            <EditForm Model="category" OnValidSubmit="OnValidSumit">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <ValidationSummary></ValidationSummary>

                <div class="form-group">
                    <label for="name">Name</label>
                    <InputText id="name" @bind-Value="category.Name" class="form-control"></InputText>
                </div>

                <div class="form-group">
                    <label for="description">Description</label>
                    <InputText id="description" @bind-Value="category.Description" class="form-control"></InputText>
                </div>

                <button type="submit" class="call_to-btn btn_white-border btn">Save</button>
                <button type="button" class="call_to-btn btn_white-border btn" @onclick="OnCancel">Cancel</button>
            </EditForm>

        }

</div>
        @code {

            private Category category;

            protected override void OnInitialized()
            {
                base.OnInitialized();

                category = new Category();
            }

            private void OnValidSumit()
            {
                AddCategoryUseCase.Execute(category);
                NavigationManager.NavigateTo("/categories");
            }

            private void OnCancel()
            {
                NavigationManager.NavigateTo("/categories");
            }

        }
