@page "/products"
@attribute [Authorize(Policy = "DbAdministratorOnly")]

@inject NavigationManager NavigationManager
@inject IViewProductsUseCase ViewProductsUseCase
@inject IGetCategoryByIdUseCase GetCategoryByIdUseCase
@inject IDeleteProductUseCase DeleteProductUseCase
    <div class="content px-4 hero_detail-box">
        <h3>Products</h3>
        <br />
        @if (products != null)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Product Category</th>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in products)
                    {
                        <tr>
                            <td>@GetCategoryByIdUseCase.Execute(product.CategoryId.Value)?.Name</td>
                            <td>@product.Name</td>
                            <td>@(Math.Round(product.Price.Value, 2))</td>
                            <td>@product.Quantity</td>
                            <td>
                                <button type="button" class="btn btn-link" @onclick="@(()=>OnEditProduct(product))">Edit</button>
                                &nbsp;
                                <button type="button" class="btn btn-link" @onclick="@(()=>OnDeleteProduct(product.ProductId))">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        <br />
        <button type="button" @onclick="OnClickAddProduct" class="call_to-btn btn_white-border btn">Add Product</button>
        </div>

        @code {

            private IEnumerable<Product> products;

            protected override void OnInitialized()
            {
                base.OnInitialized();

                products = ViewProductsUseCase.Execute();
            }

            private void OnClickAddProduct()
            {
                NavigationManager.NavigateTo("/addproduct");
            }

            private void OnEditProduct(Product product)
            {
                NavigationManager.NavigateTo($"/editproduct/{product.ProductId}");
            }

            private void OnDeleteProduct(int productId)
            {
                DeleteProductUseCase.Execute(productId);
            }
        }
