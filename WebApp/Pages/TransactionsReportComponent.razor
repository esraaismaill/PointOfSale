@page "/transactions"
@attribute [Authorize(Policy = "AdminOnly")]

@inject IJSRuntime JSRuntime
@inject IGetTransactionsUseCase GetTransactionsUseCase




    <div class="content px-4">
        <div id="printarea">
            <div class="row hideWhenPrint">
                <div class="col-2">
                    <label for="cashier">Cashier Name</label>
                    <input type="text" id="cashier" class="form-control" @bind-value="cashierName" />
                </div>
                <div class="col-2">
                    <label for="cashier">Payment Method</label>
                    <input type="text" id="cashier" class="form-control" @bind-value="visa" />
                </div>
                <div class="col-2">
                    <label for="cashier">Receipt ID</label>
                    <input type="text" id="cashier" class="form-control" @bind-value="receiptsId" />
                </div>
                <div class="col-3">
                    <label for="startdate">Start Date</label>
                    <input type="date" id="startdate" class="form-control" @bind-value="startDate" />
                </div>
                <div class="col-3">
                    <label for="enddate">End Date</label>
                    <input type="date" id="enddate" class="form-control" @bind-value="endDate" />
                </div>
                <br />
                <div class="col-2">
                    <label>&nbsp;</label>
                    <button type="button" class="call_to-btn btn_white-border btn form-control" @onclick="LoadTransactions">Search</button>
                </div>
                <div class="col-2">
                    <label>&nbsp;</label>
                    <button type="button" class="call_to-btn btn_white-border btn form-control" @onclick="PrintReport">Print</button>
                </div>
            </div>
            <br />
            @if (transactions != null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Date Time</th>
                            <th>Cashier Name</th>
                            <th>Receipt ID</th>
                            <th>Product Name</th>
                            <th>Qty Sold</th>
                            <th>Price</th>
                            <th>Sold Amt</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var tran in transactions)
                        {
                            <tr>
                                <td>@tran.TimeStamp.ToString("yyyy-MM-dd hh:mm")</td>
                                <td>@tran.CashierName</td>
                                <td>@tran.ReceiptsId2</td>
                                <td>@tran.ProductName</td>
                                <td>@tran.SoldQty</td>
                                <td style="text-align:left">@(string.Format("{0:c}", tran.Price))</td>
                                <td style="text-align:left">@(string.Format("{0:c}", tran.SoldQty * tran.Price))</td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="6">&nbsp;</td>
                            <td style="text-align:right">
                                <b>Grand Total:</b>
                            </td>
                            <td style="text-align:right">
                                <b>
                                    <!-- @(string.Format("{0:c}", (transactions.Where(x => x.ReceiptsId.ToString()== receiptsId)).Sum(x => x.Price * x.SoldQty)))-->
                                
                                </b>
                                                </td>
                                            </tr>
                                        </tfoot>
                                    </table>

                                }

                            </div>
                            </div>
                            @code {

                                private string cashierName;
                                private DateTime startDate;
                                private DateTime endDate;
                                private string visa;
                                private string receiptsId;
                                private IEnumerable<Transaction> transactions;

                                protected override void OnInitialized()
                                {
                                    base.OnInitialized();

                                    startDate = DateTime.Today;
                                    endDate = DateTime.Today;
                                }

                                private void LoadTransactions()
                                {
                                    transactions = GetTransactionsUseCase.Execute(cashierName, startDate, endDate, visa, receiptsId);
                                }

                                private void PrintReport()
                                {

                                    JSRuntime.InvokeVoidAsync("Print");
                                }
                            }
